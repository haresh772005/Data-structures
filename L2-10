#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node
struct Node {
    int data;
    struct Node* next;
};

// Function to insert a node at the beginning
void insertAtBeginning(struct Node** head, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node)); // Create a new node
    newNode->data = data;      // Assign data to the new node
    newNode->next = *head;     // Point new node to the current head
    *head = newNode;           // Move the head to point to the new node
}

// Function to delete the first node
void deleteAtBeginning(struct Node** head) {
    if (*head == NULL) { // Check if the list is empty
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = *head;   // Temporarily store the current head
    *head = (*head)->next;       // Move head to the next node
    free(temp);                  // Free the memory of the deleted node
}

// Function to display the list
void displayList(struct Node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    while (head != NULL) {
        printf("%d -> ", head->data);
        head = head->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head = NULL; // Initialize an empty list

    // Inserting nodes at the beginning
    insertAtBeginning(&head, 10);
    insertAtBeginning(&head, 20);
    insertAtBeginning(&head, 30);

    // Display the list
    printf("List after insertion: ");
    displayList(head);

    // Deleting nodes from the beginning
    deleteAtBeginning(&head);
    deleteAtBeginning(&head);

    // Display the list after deletion
    printf("List after deletion: ");
    displayList(head);

    return 0;
}
